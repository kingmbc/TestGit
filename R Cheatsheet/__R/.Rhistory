x <- toJSON( iris )
system.time( y <- fromJSON(x) )
system.time( y2 <- fromJSON(x,method = "R") )
x
json_file <- "http://localhost:8888/outfile.json"
json_data <- ?fromJSON(paste(readLines(json_file), collapse=""))
json_data
json_file <- "http://localhost:8888/outfile.json.txt"
json_data <- ?fromJSON(paste(readLines(json_file), collapse=""))
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
json_data
ToothGrowth
boxplot(len~dose, data=ToothGrowth, boxwex=0.25, at=1:3 - 0.2,
subset=supp=="VC", col="yellow", main="Guinea Pigs' Tooth growth",
xlab="Vitamin C Dose (mg)", ylab="Tooth Length", ylim=c(0, 35))
boxplot(len~dose, data=ToothGrowth, add=T, boxwex=0.25, at=1:3 + 0.2,
subset=supp=="OJ", col="orange")
legend(2, 9, c("Abscorbic Acid", "Orange Juice"), fill=c("yellow", "orange"))
boxplot(len~dose, data=ToothGrowth, boxwex=0.25, at=1:3 - 0.2,
subset=supp=="VC", col="yellow", main="Guinea Pigs' Tooth growth",
xlab="Vitamin C Dose (mg)", ylab="Tooth Length", ylim=c(0, 35))
boxplot(len~dose, data=ToothGrowth, add=T, boxwex=0.25, at=1:3 + 0.2,
subset=supp=="OJ", col="orange")
legend(2, 9, c("Abscorbic Acid", "Orange Juice"), fill=c("yellow", "orange"))
opar = par(mfrow=c(2,2), mex=0.8, mar=c(3,3,2,1) + .1)
stripchart(agdat$Age ~agdat$Gender)
stripchart(agdat$Age ~agdat$Gender, method="stack")
stripchart(agdat$Age ~agdat$Gender, method="jitter")
stripchart(agdat$Age ~agdat$Gender, method="jitter", jitter=.03)
agdat = read.table("F:/Data Storage/R data/AgeGender.txt", header=T)
agdat = read.table("D:/Data Storage/R data/AgeGender.txt", header=T)
q = read.table("D:/workspace/[SVN]IDBLab/__R/income.txt", header=T);q
agdat = read.table("D:/workspace/[SVN]IDBLab/__R/AgeGender.txt", header=T)
agdat.male = agdat$Age[agdat$Gender=="male"]
agdat.female = agdat$Age[agdat$Gender=="female"]
par(mfrow=c(2,1))
hist(agdat.male, breaks=c(3.5:10.5), col="cyan")
hist(agdat.female, breaks=c(3.5:10.5), col="magenta")
library(lattice)
histogram(~agdat$Age | agdat$Gender, data=agdat, type="count",
breaks = c(3.5:10.5), col="cyan")
boxplot(agdat$Age ~ agdat$Gender)
agdat
ToothGrowth
?boxplot
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
boxplot(count ~ spray, data = InsectSprays,
notch = TRUE, add = TRUE, col = "blue")
boxplot(decrease ~ treatment, data = OrchardSprays,
log = "y", col = "bisque")
rb <- boxplot(decrease ~ treatment, data = OrchardSprays, col="bisque")
title("Comparing boxplot()s and non-robust mean +/- SD")
mn.t <- tapply(OrchardSprays$decrease, OrchardSprays$treatment, mean)
sd.t <- tapply(OrchardSprays$decrease, OrchardSprays$treatment, sd)
xi <- 0.3 + seq(rb$n)
points(xi, mn.t, col = "orange", pch = 18)
arrows(xi, mn.t - sd.t, xi, mn.t + sd.t,
code = 3, col = "pink", angle = 75, length = .1)
## boxplot on a matrix:
mat <- cbind(Uni05 = (1:100)/21, Norm = rnorm(100),
`5T` = rt(100, df = 5), Gam2 = rgamma(100, shape = 2))
boxplot(as.data.frame(mat),
main = "boxplot(as.data.frame(mat), main = ...)")
par(las=1)# all axis labels horizontal
boxplot(as.data.frame(mat), main = "boxplot(*, horizontal = TRUE)",
horizontal = TRUE)
## Using 'at = ' and adding boxplots -- example idea by Roger Bivand :
boxplot(len ~ dose, data = ToothGrowth,
boxwex = 0.25, at = 1:3 - 0.2,
subset = supp == "VC", col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i")
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
legend(2, 9, c("Ascorbic acid", "Orange juice"),
fill = c("yellow", "orange"))
help(bxp)
require(stats)
set.seed(753)
(bx.p <- boxplot(split(rt(100, 4), gl(5,20))))
op <- par(mfrow= c(2,2))
bxp(bx.p, xaxt = "n")
bxp(bx.p, notch = TRUE, axes = FALSE, pch = 4, boxfill=1:5)
bxp(bx.p, notch = TRUE, boxfill= "lightblue", frame= FALSE,
outl= FALSE, main = "bxp(*, frame= FALSE, outl= FALSE)")
bxp(bx.p, notch = TRUE, boxfill= "lightblue", border= 2:6,
ylim = c(-4,4), pch = 22, bg = "green", log = "x",
main = "... log='x', ylim=*")
par(op)
op <- par(mfrow= c(1,2))
## single group -- no label
boxplot (weight ~ group, data = PlantGrowth, subset = group=="ctrl")
## with label
bx <- boxplot(weight ~ group, data = PlantGrowth,
subset = group=="ctrl", plot = FALSE)
bxp(bx,show.names=TRUE)
par(op)
z <- split(rnorm(1000), rpois(1000,2.2))
boxplot(z, whisklty=3, main="boxplot(z, whisklty = 3)")
## Colour support similar to plot.default:
op <- par(mfrow=1:2, bg="light gray", fg="midnight blue")
boxplot(z,   col.axis="skyblue3", main="boxplot(*, col.axis=..,main=..)")
plot(z[[1]], col.axis="skyblue3", main=   "plot(*, col.axis=..,main=..)")
mtext("par(bg=\"light gray\", fg=\"midnight blue\")",
outer = TRUE, line = -1.2)
par(op)
## Mimic S-Plus:
splus <- list(boxwex=0.4, staplewex=1, outwex=1, boxfill="grey40",
medlwd=3, medcol="white", whisklty=3, outlty=1, outpch=NA)
boxplot(z, pars=splus)
## Recycled and "sweeping" parameters
op <- par(mfrow=c(1,2))
boxplot(z, border=1:5, lty = 3, medlty = 1, medlwd = 2.5)
boxplot(z, boxfill=1:3, pch=1:5, lwd = 1.5, medcol="white")
par(op)
## too many possibilities
boxplot(z, boxfill= "light gray", outpch = 21:25, outlty = 2,
bg = "pink", lwd = 2,
medcol = "dark blue", medcex = 2, medpch = 20)
medcol = "dark blue", medcex = 2, medpch = 20)
medcol = "dark blue", medcex = 2, medpch = 20)
medcol = "dark blue", medcex = 2, medpch = 20)
hist(time,freq=T,col="magenta",xlab="Phone Time (min/w)",
main="Weekly Long-Distance Calling")
abline(v=m,col="blue")
hist(time,freq=F,col="cyan",xlab="Phone Time (min/w)",
main="Weekly Long-Distance Calling")
lines(density(time),col="red")
n=200
time <- round(rnorm(n,mean=100,sd=10),1)
m = round(mean(time),1); s = round(sd(x),1)
data.frame(time)
cat("Mean =",m,"minutes, standard deviation =",s,"minutes\n")
par(mfrow=c(1,2))
hist(time,freq=T,col="magenta",xlab="Phone Time (min/w)",
main="Weekly Long-Distance Calling")
abline(v=m,col="blue")
hist(time,freq=F,col="cyan",xlab="Phone Time (min/w)",
main="Weekly Long-Distance Calling")
lines(density(time),col="red")
X = c(0, 3, 1, 0, 6, 5, 3, 4, 10, 8)
Y = c(12, 13, 15, 19, 26, 27, 29, 31, 40, 48)
lm.xy = lm(Y~X)
yc = (lm.xy)$fitted.value
e = Y-yc; e2= e^2;
data.frame(X,Y,yc,e,e2)
aov.xy = aov(lm.xy)
par(mfrow=c(2,2))
plot(aov.xy)
plot(lm.xy)
(SSerror = sum(e2));
#13-3. Residuals and Fitted Values
fitted(lm.xy)   #Return fitted y values for the gvien x values
x = runif(12);
y = rnorm(12);
plot(x, y, pch=20)
s = seq(length(x)-1)
segments(x[s], y[s], x[s+2], y[s+2])
#Scatter plot for sentence vs. prior with fitted line and residual line segments
plot(X, Y, xlab="Number of Prior Convictions (X)",
ylab="Sentence Length (Y)", bg="cyan", pch=21)
lines(X, fitted(lm.xy))
segments(X, fitted(lm.xy), X, Y)
resid(lm.xy)
plot(fitted(lm.xy), resid(lm.xy))
#We can get an indication of whether residuals might have come from a normal
#distribution by checking for a straight line on a Q-Q plot
qqnorm(resid(lm.xy), pch=16)
qqline(resid(lm.xy))
#13-4.Prediction and Confidence Bands
predict(lm.xy)
plot(X,Y)
lines(X, predict(lm.xy), pch=2, typ="o")
predict(lm.xy, int="c") #"confidence"
#plot with confidence bands
p.frame = data.frame(X=0:10)
pc = predict(lm.xy, int="c", newdata = p.frame)
plot(X,Y)
p.X = p.frame$X
matlines(p.X, pc, lty=c(1,2,2), col=c("blue", "red", "red"))
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
means <- tapply(InsectSprays$count,InsectSprays$spray,mean)
points(means,col="red",pch=18)
p<-qplot(spray,count,data=InsectSprays,geom='boxplot')
p<-p+stat_summary(fun.y=mean,shape=1,col='red',geom='point')
print(p)
require(ggplot2)
p<-qplot(spray,count,data=InsectSprays,geom='boxplot')
p<-p+stat_summary(fun.y=mean,shape=1,col='red',geom='point')
print(p)
p<-qplot(spray,count,data=InsectSprays,geom='boxplot')
p<-p+stat_summary(fun.y=mean,shape=1,col='red',geom='point')
print(p)
qplot(spray,count,data=InsectSprays,geom='boxplot')
zx <- replicate (5, rnorm(50))
zx_means <- (colMeans(zx, na.rm = TRUE))
boxplot(zx, horizontal = FALSE, outline = FALSE)
points(zx_means, pch = 22, col = "darkgrey", lwd = 7)
library(ggplot2)
x <- factor(rep(1:10, 100))
y <- rnorm(1000)
df <- data.frame(x=x, y=y)
ggplot(df, aes(x=x, y=y)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="line", aes(group=1))  +
stat_summary(fun.y=mean, geom="point")
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
# *add* notches (somewhat funny here):
boxplot(count ~ spray, data = InsectSprays,
notch = TRUE, add = TRUE, col = "blue")
boxplot(decrease ~ treatment, data = OrchardSprays,
log = "y", col = "bisque")
rb <- boxplot(decrease ~ treatment, data = OrchardSprays, col="bisque")
title("Comparing boxplot()s and non-robust mean +/- SD")
mn.t <- tapply(OrchardSprays$decrease, OrchardSprays$treatment, mean)
sd.t <- tapply(OrchardSprays$decrease, OrchardSprays$treatment, sd)
xi <- 0.3 + seq(rb$n)
points(xi, mn.t, col = "orange", pch = 18)
arrows(xi, mn.t - sd.t, xi, mn.t + sd.t,
code = 3, col = "pink", angle = 75, length = .1)
## boxplot on a matrix:
mat <- cbind(Uni05 = (1:100)/21, Norm = rnorm(100),
`5T` = rt(100, df = 5), Gam2 = rgamma(100, shape = 2))
boxplot(as.data.frame(mat),
main = "boxplot(as.data.frame(mat), main = ...)")
par(las=1)# all axis labels horizontal
boxplot(as.data.frame(mat), main = "boxplot(*, horizontal = TRUE)",
horizontal = TRUE)
## Using 'at = ' and adding boxplots -- example idea by Roger Bivand :
boxplot(len ~ dose, data = ToothGrowth,
boxwex = 0.25, at = 1:3 - 0.2,
subset = supp == "VC", col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i")
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
legend(2, 9, c("Ascorbic acid", "Orange juice"),
fill = c("yellow", "orange"))
## more examples in  help(bxp)
require(stats)
set.seed(753)
(bx.p <- boxplot(split(rt(100, 4), gl(5,20))))
op <- par(mfrow= c(2,2))
bxp(bx.p, xaxt = "n")
bxp(bx.p, notch = TRUE, axes = FALSE, pch = 4, boxfill=1:5)
bxp(bx.p, notch = TRUE, boxfill= "lightblue", frame= FALSE,
boxplot(len ~ dose, data = ToothGrowth,
boxwex = 0.25, at = 1:3 - 0.2,
subset = supp == "VC", col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i")
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
legend(2, 9, c("Ascorbic acid", "Orange juice"),
fill = c("yellow", "orange"))
## more examples in  help(bxp)
require(stats)
set.seed(753)
boxplot(len ~ dose, data = ToothGrowth,
boxwex = 0.25, at = 1:3 - 0.2,
subset = supp == "VC", col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i")
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
legend(2, 9, c("Ascorbic acid", "Orange juice"),
fill = c("yellow", "orange"))
## more examples in  help(bxp)
require(stats)
set.seed(753)
(bx.p <- boxplot(split(rt(100, 4), gl(5,20))))
op <- par(mfrow= c(2,2))
bxp(bx.p, xaxt = "n")
bxp(bx.p, notch = TRUE, axes = FALSE, pch = 4, boxfill=1:5)
bxp(bx.p, notch = TRUE, boxfill= "lightblue", frame= FALSE,
outl= FALSE, main = "bxp(*, frame= FALSE, outl= FALSE)")
bxp(bx.p, notch = TRUE, boxfill= "lightblue", border= 2:6,
ylim = c(-4,4), pch = 22, bg = "green", log = "x",
main = "... log='x', ylim=*")
par(op)
op <- par(mfrow= c(1,2))
## single group -- no label
boxplot (weight ~ group, data = PlantGrowth, subset = group=="ctrl")
## with label
bx <- boxplot(weight ~ group, data = PlantGrowth,
subset = group=="ctrl", plot = FALSE)
bxp(bx,show.names=TRUE)
par(op)
z <- split(rnorm(1000), rpois(1000,2.2))
boxplot(z, whisklty=3, main="boxplot(z, whisklty = 3)")
## Colour support similar to plot.default:
op <- par(mfrow=1:2, bg="light gray", fg="midnight blue")
boxplot(z,   col.axis="skyblue3", main="boxplot(*, col.axis=..,main=..)")
plot(z[[1]], col.axis="skyblue3", main=   "plot(*, col.axis=..,main=..)")
mtext("par(bg=\"light gray\", fg=\"midnight blue\")",
outer = TRUE, line = -1.2)
par(op)
## Mimic S-Plus:
splus <- list(boxwex=0.4, staplewex=1, outwex=1, boxfill="grey40",
medlwd=3, medcol="white", whisklty=3, outlty=1, outpch=NA)
boxplot(z, pars=splus)
## Recycled and "sweeping" parameters
op <- par(mfrow=c(1,2))
boxplot(z, border=1:5, lty = 3, medlty = 1, medlwd = 2.5)
boxplot(z, boxfill=1:3, pch=1:5, lwd = 1.5, medcol="white")
par(op)
## too many possibilities
boxplot(z, boxfill= "light gray", outpch = 21:25, outlty = 2,
bg = "pink", lwd = 2,
medcol = "dark blue", medcex = 2, medpch = 20)
medcol = "dark blue", medcex = 2, medpch = 20)
medcol = "dark blue", medcex = 2, medpch = 20)
medcol = "dark blue", medcex = 2, medpch = 20)
medcol = "dark blue", medcex = 2, medpch = 20)
medcol = "dark blue", medcex = 2, medpch = 20)
medcol = "dark blue", medcex = 2, medpch = 20)
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
means <- tapply(InsectSprays$count,InsectSprays$spray,mean)
points(means,col="red",pch=18)
library(ggplot2)
x <- factor(rep(1:10, 100))
y <- rnorm(1000)
df <- data.frame(x=x, y=y)
ggplot(df, aes(x=x, y=y)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="line", aes(group=1))  +
stat_summary(fun.y=mean, geom="point")
require(gplots)
boxwex=0.15
data <- read.table("all_runs_fitness.data");
colnames(data)=c("model","matrix","fitness")
boxplot(fitness ~ matrix,
data=data, boxwex=boxwex, at=(1:7 - 0.2),
main="Fitness for Matrix/Models", xlab="Matrixtype",
ylab="Fitness", ylim=c(20,100),
subset=(model=="dyn"), col="lightblue", xaxt="n", whisklty=1)
boxplot(fitness ~ matrix,
data=data, boxwex=boxwex, at = 1:7, add=TRUE,
subset=(model=="dl3"), col="mistyrose", xaxt="n", whisklty=1)
boxplot(fitness ~ matrix,
data=data, boxwex=boxwex, at=(1:7 + 0.2), add=TRUE,
subset=(model=="dl4"), col="lightcyan", xaxt="n", whisklty=1)
axis(1, 1:8-0.5, labels=FALSE)
axis(1, 1:7, tck=FALSE, labels=levels(data[,2]))
smartlegend(x="left", y="bottom", inset = 0.01,
c("dyn","dl3","dl4"), fill = c("lightblue", "mistyrose", "lightcyan"))
leg.txt = c("Abies grandis","Acer macrophyllum","Calocedrus
decurrens","Pinus ponderosa","Pseudotsuga meziensii","Quercus
garryana","Quercus kelloggii")
site.txt = c("Brownsville","Chip Ross","Finley","Jim's
Creek","Lowell","Mount Pisgah","South Eugene")
colors = c("gray","red","white","blue","yellow","purple","orange")
# Fake data here:
site = rep(site.txt, each = 21)
sp = rep(rep(leg.txt, each = 3), times = 7)
ga = runif(147, 0, 20)
datnew.lo = data.frame(site,sp,ga)
# Now make the plot:
boxplot(ga~sp*site,data=datnew.lo, range = 1,
col = colors,
ylim = c(0,30),
xaxt = "n",
xlab = "Site",
ylab = "Basal Area Growth Increment",
main = "Basal Area Growth Increment by Site and Species")
axis(1, at = c(4,11,18,25,32,39,46),
labels = site.txt,
)
abline(v = 7.5, lty = 3)
abline(v = 14.5, lty = 3)
abline(v = 21.5, lty = 3)
abline(v = 28.5, lty = 3)
abline(v = 35.5, lty = 3)
abline(v = 42.5, lty = 3)
legend("topright", legend = leg.txt, fill = colors, bg = "white")
legend("topright", legend = leg.txt, fill = colors, bg = "white")
legend("topright", legend = leg.txt, fill = colors, bg = "white")
legend("topright", legend = leg.txt, fill = colors, bg = "white")
legend("topright", legend = leg.txt, fill = colors, bg = "white")
legend("topright", legend = leg.txt, fill = colors, bg = "white")
install.packages("plyr")
options(digits=5)
x <- c(5959, 3534, 2641, 1965, 1738, 1182, 667, 613, 610, 549,
527, 353, 331, 290, 253, 193, 156, 133, 122, 114)
y <- c(5673, 3659, 2565, 2182, 1839, 1236, 918, 902, 756, 500,
487, 463, 225, 257, 311, 212, 166, 123, 198, 99)
fit <- glm(y ~ x - 1, weights = x^2,
family = inverse.gaussian(link = "identity"),
epsilon = 1e-12)
fit
coef(summary(fit))
(beta.exact <- sum(y)/sum(x))
stopifnot(all.equal(beta.exact, as.vector(coef(fit))))
?glm
## Dobson (1990) Page 93: Randomized Controlled Trial :
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
print(d.AD <- data.frame(treatment, outcome, counts))
glm.D93 <- glm(counts ~ outcome + treatment, family = poisson())
anova(glm.D93)
summary(glm.D93)
## glm.nb with weights
library(MASS)
yeast <- data.frame(cbind(numbers = 0:5, fr = c(213, 128, 37, 18, 3, 1)))
attach(yeast)
n <- rep(numbers, fr)
## fitting using glm.nb with weights - wrong results in 7.2-18
yeast2.fit <- glm.nb(numbers~1, link = log, weights=fr)
summary(yeast2.fit)
## fitting extending the vector and using glm.nb - correct result ##
yeast3.fit<-glm.nb(n~1, link = log)
summary(yeast3.fit)
stopifnot(all.equal(deviance(yeast2.fit), deviance(yeast3.fit)))
stopifnot(all.equal(yeast2.fit$theta, yeast3.fit$theta))
detach(yeast)
# another one, corrected in 7.2-43
set.seed(13245)
x <- c(-5:5)
mu <- exp(1 + 0.1*x)
y <- rnegbin(length(mu), mu = mu, theta = 1.5)
dat <- data.frame(x, y)
dat2 <- dat[rep(1:11, each=2), ]
w <- round(runif(11),2)
dat2$w <- as.vector(rbind(w, 1-w))
fm2 <- glm.nb(y ~ x, dat)
gm2 <- glm.nb(y ~ x, dat2, weights = w)
summary(fm2)
summary(gm2) # failed before
stopifnot(all.equal(fm2$theta, gm2$theta)) # differed
stopifnot(all.equal(deviance(fm2), deviance(gm2)))
fm3 <- glm(y ~ x, negative.binomial(theta = fm2$theta), dat)
gm3 <- glm(y ~ x, negative.binomial(theta = fm2$theta), dat2, weights =w)
summary(fm3)
summary(gm3)
stopifnot(all.equal(deviance(fm3), deviance(gm3)))
fit <- glm.nb(Days ~ Sex/(Age + Eth*Lrn), data = quine)
set.seed(1)
simulate(fit, nsim=5)[1:10, ]
if(getRversion() >= "2.9.0") {
fit2 <- glm.convert(fit)
set.seed(1)
print(simulate(fit2, nsim=5)[1:10, ])
}
getwd
getwd()
setwd("D:\Desktop\Dropbox\R Code\__R")
setwd("D:/Desktop/Dropbox/R Code/__R")
data_ours = read.csv("user satisfaction.csv",sep=""))
data_ours = read.csv("user satisfaction.csv",sep="")
data_ours
data_ours = read.csv("user satisfaction.csv",sep=",")
data_ours
?barplot
require(grDevices) # for colours
tN <- table(Ni <- stats::rpois(100, lambda = 5))
r <- barplot(tN, col = rainbow(20))
#- type = "h" plotting *is* 'bar'plot
lines(r, tN, type = "h", col = "red", lwd = 2)
barplot(tN, space = 1.5, axisnames = FALSE,
sub = "barplot(..., space= 1.5, axisnames = FALSE)")
barplot(VADeaths, plot = FALSE)
barplot(VADeaths, plot = FALSE, beside = TRUE)
mp <- barplot(VADeaths) # default
tot <- colMeans(VADeaths)
text(mp, tot + 3, format(tot), xpd = TRUE, col = "blue")
barplot(VADeaths, beside = TRUE,
col = c("lightblue", "mistyrose", "lightcyan",
"lavender", "cornsilk"),
legend = rownames(VADeaths), ylim = c(0, 100))
title(main = "Death Rates in Virginia", font.main = 4)
data <- read.table("D:/Desktop/Dropbox/R Code/__R/Ramen_Data_PCA.txt", header=T, fileEncoding="UTF-8")
data;
?cor
cor(data)
round(cor(data),2)
p1 = prcomp(data, scale=TRUE);
print(p1)
summary(p1)
predict(p1)
round(predict(p1), 2)
pdf("plot2.pdf", family="Korea1deb");
biplot(p1)
dev.off()
zoo.ts <- zoo(rnorm(231),as.Date(13514:13744,origin="1970-01-01"))
periodicity(zoo.ts)
install.packages("xts");
require(xts);
as.Date(13514:13744,origin="1970-01-01")
13744-13514
rnorm(231)
?ZOO
?zoo
zoo.ts <- zoo(rnorm(231),as.Date(13514:13744,origin="1970-01-01"))
zoo.ts
periodicity(zoo.ts)
a = periodicity(zoo.ts)
a
?periodicity
